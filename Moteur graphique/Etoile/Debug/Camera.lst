SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Jul-2015 17:22:11  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\Casio Projets\Etoile\Camera.cpp

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Camera.cpp     1    /****************************************************************************/
      Camera.cpp     2    /*                                                                          */
      Camera.cpp     3    /*                                 CAMERA                                   */
      Camera.cpp     4    /*                                                                          */
      Camera.cpp     5    /****************************************************************************/
      Camera.cpp     6    
      Camera.cpp     7    
      Camera.cpp     8    #include "Camera.hpp"
      Camera.cpp     9    
      Camera.cpp    10    
      Camera.cpp    11    /****************************************************************************/
      Camera.cpp    12    /*                             INITIALSATION                                */
      Camera.cpp    13    /****************************************************************************/
      Camera.cpp    14    Camera::Camera()
P   00000000              ___ct__6CameraFv:                ; function: Camera::Camera()
                                                           ; frame size=8
    00000000 4F22                   STS.L       PR,@-R15
      Camera.cpp    15    {
    00000002 6343                   MOV         R4,R3
    00000004 7FFC                   ADD         #-4,R15
    00000006 2338                   TST         R3,R3
    00000008 8F06                   BF/S        L255
    0000000A 2F42                   MOV.L       R4,@R15
    0000000C D338                   MOV.L       L263+6,R3  ; ___nw__FUl
    0000000E 430B                   JSR         @R3
    00000010 E428                   MOV         #40,R4
    00000012 2008                   TST         R0,R0
    00000014 8D18                   BT/S        L254
    00000016 2F02                   MOV.L       R0,@R15
    00000018              L255:                             
      Camera.cpp    16        x = 0; y = 0; z = -20000;
    00000018 62F2                   MOV.L       @R15,R2
    0000001A E400                   MOV         #0,R4
    0000001C 2242                   MOV.L       R4,@R2
      Camera.cpp    17        theta = 0; move_theta(0);
    0000001E 6543                   MOV         R4,R5
    00000020 63F2                   MOV.L       @R15,R3
    00000022 1341                   MOV.L       R4,@(4,R3)
    00000024 63F2                   MOV.L       @R15,R3
    00000026 9260                   MOV.W       L263,R2    ; H'B1E0
    00000028 1322                   MOV.L       R2,@(8,R3)
    0000002A 63F2                   MOV.L       @R15,R3
    0000002C 1343                   MOV.L       R4,@(12,R3)
    0000002E D331                   MOV.L       L263+10,R3 ; _move_theta__6CameraFf
    00000030 430B                   JSR         @R3
    00000032 64F2                   MOV.L       @R15,R4
      Camera.cpp    18        phi = 0; move_phi(0);
    00000034 63F2                   MOV.L       @R15,R3
    00000036 E200                   MOV         #0,R2
    00000038 1324                   MOV.L       R2,@(16,R3)
    0000003A 6523                   MOV         R2,R5
    0000003C D32E                   MOV.L       L263+14,R3 ; _move_phi__6CameraFf
    0000003E 430B                   JSR         @R3
    00000040 64F2                   MOV.L       @R15,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Jul-2015 17:22:11  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Camera.cpp    19        focal = 250;
    00000042 63F2                   MOV.L       @R15,R3
    00000044 9252                   MOV.W       L263+2,R2  ; H'00FA
    00000046 1329                   MOV.L       R2,@(36,R3)
    00000048              L254:                             
    00000048 60F2                   MOV.L       @R15,R0
      Camera.cpp    20    }
    0000004A 7F04                   ADD         #4,R15
    0000004C 4F26                   LDS.L       @R15+,PR
    0000004E 000B                   RTS
    00000050 0009                   NOP
      Camera.cpp    21    
      Camera.cpp    22    
      Camera.cpp    23    /****************************************************************************/
      Camera.cpp    24    /*                             move_forward                                 */
      Camera.cpp    25    /****************************************************************************/
      Camera.cpp    26    void Camera::move_forward(int distance)
    00000052              _move_forward__6CameraFi:        ; function: Camera::move_forward(int)
                                                           ; frame size=8
                                                           ; used runtime library name:
                                                           ; __divls
    00000052 4F22                   STS.L       PR,@-R15
    00000054 4F12                   STS.L       MACL,@-R15
      Camera.cpp    27    {
      Camera.cpp    28        x += distance * cos_phi * sin_theta / (SHIFT_V * SHIFT_V);
    00000056 D629                   MOV.L       L263+18,R6 ; H'00100000
    00000058 5147                   MOV.L       @(28,R4),R1
    0000005A 0517                   MUL.L       R1,R5
    0000005C 5346                   MOV.L       @(24,R4),R3
    0000005E 011A                   STS         MACL,R1
    00000060 0137                   MUL.L       R3,R1
    00000062 011A                   STS         MACL,R1
    00000064 D226                   MOV.L       L263+22,R2 ; __divls
    00000066 420B                   JSR         @R2
    00000068 6063                   MOV         R6,R0
    0000006A 6342                   MOV.L       @R4,R3
    0000006C 330C                   ADD         R0,R3
    0000006E 2432                   MOV.L       R3,@R4
      Camera.cpp    29        y += distance * sin_phi             / SHIFT_V;
    00000070 5248                   MOV.L       @(32,R4),R2
    00000072 0527                   MUL.L       R2,R5
    00000074 021A                   STS         MACL,R2
    00000076 4211                   CMP/PZ      R2
    00000078 8901                   BT          L257
    0000007A 9338                   MOV.W       L263+4,R3  ; H'03FF
    0000007C 323C                   ADD         R3,R2
    0000007E              L257:                             
    0000007E E3F6                   MOV         #-10,R3
    00000080 5141                   MOV.L       @(4,R4),R1
    00000082 423C                   SHAD        R3,R2
    00000084 312C                   ADD         R2,R1
    00000086 1411                   MOV.L       R1,@(4,R4)
      Camera.cpp    30        z += distance * cos_phi * cos_theta / (SHIFT_V * SHIFT_V);
    00000088 5147                   MOV.L       @(28,R4),R1
    0000008A 0517                   MUL.L       R1,R5
    0000008C 5345                   MOV.L       @(20,R4),R3
    0000008E 011A                   STS         MACL,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Jul-2015 17:22:11  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000090 0137                   MUL.L       R3,R1
    00000092 011A                   STS         MACL,R1
    00000094 D21A                   MOV.L       L263+22,R2 ; __divls
    00000096 420B                   JSR         @R2
    00000098 6063                   MOV         R6,R0
    0000009A 5342                   MOV.L       @(8,R4),R3
    0000009C 330C                   ADD         R0,R3
    0000009E 1432                   MOV.L       R3,@(8,R4)
      Camera.cpp    31    }
    000000A0 4F16                   LDS.L       @R15+,MACL
    000000A2 4F26                   LDS.L       @R15+,PR
    000000A4 000B                   RTS
    000000A6 0009                   NOP
      Camera.cpp    32    
      Camera.cpp    33    
      Camera.cpp    34    /****************************************************************************/
      Camera.cpp    35    /*                              move_theta                                  */
      Camera.cpp    36    /****************************************************************************/
      Camera.cpp    37    void Camera::move_theta(float value)
    000000A8              _move_theta__6CameraFf:          ; function: Camera::move_theta(float)
                                                           ; frame size=8
                                                           ; used runtime library name:
                                                           ; __adds, __muls, __stoi
    000000A8 2FE6                   MOV.L       R14,@-R15
      Camera.cpp    38    {
      Camera.cpp    39        theta += value;
    000000AA 6053                   MOV         R5,R0
    000000AC D315                   MOV.L       L263+26,R3 ; __adds
    000000AE 6E43                   MOV         R4,R14
    000000B0 4F22                   STS.L       PR,@-R15
    000000B2 430B                   JSR         @R3
    000000B4 51E3                   MOV.L       @(12,R14),R1
    000000B6 1E03                   MOV.L       R0,@(12,R14)
      Camera.cpp    40        cos_theta = cosf(theta) * SHIFT_V;
    000000B8 D213                   MOV.L       L263+30,R2 ; _cosf
    000000BA 420B                   JSR         @R2
    000000BC 6403                   MOV         R0,R4
    000000BE D113                   MOV.L       L263+34,R1 ; H'44800000
    000000C0 D313                   MOV.L       L263+38,R3 ; __muls
    000000C2 430B                   JSR         @R3
    000000C4 0009                   NOP
    000000C6 D213                   MOV.L       L263+42,R2 ; __stoi
    000000C8 420B                   JSR         @R2
    000000CA 0009                   NOP
    000000CC 1E05                   MOV.L       R0,@(20,R14)
      Camera.cpp    41        sin_theta = sinf(theta) * SHIFT_V;
    000000CE D312                   MOV.L       L263+46,R3 ; _sinf
    000000D0 430B                   JSR         @R3
    000000D2 54E3                   MOV.L       @(12,R14),R4
    000000D4 D10D                   MOV.L       L263+34,R1 ; H'44800000
    000000D6 D20E                   MOV.L       L263+38,R2 ; __muls
    000000D8 420B                   JSR         @R2
    000000DA 0009                   NOP
    000000DC D30D                   MOV.L       L263+42,R3 ; __stoi
    000000DE 430B                   JSR         @R3
    000000E0 0009                   NOP
    000000E2 1E06                   MOV.L       R0,@(24,R14)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Jul-2015 17:22:11  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      Camera.cpp    42    }
    000000E4 4F26                   LDS.L       @R15+,PR
    000000E6 000B                   RTS
    000000E8 6EF6                   MOV.L       @R15+,R14
    000000EA              L263:                             
    000000EA B1E0                   .DATA.W     H'B1E0
    000000EC 00FA                   .DATA.W     H'00FA
    000000EE 03FF                   .DATA.W     H'03FF
    000000F0 <00000000>             .DATA.L     ___nw__FUl
    000000F4 <00000000>             .DATA.L     _move_theta__6CameraFf
    000000F8 <00000000>             .DATA.L     _move_phi__6CameraFf
    000000FC 00100000               .DATA.L     H'00100000
    00000100 <00000000>             .DATA.L     __divls
    00000104 <00000000>             .DATA.L     __adds
    00000108 <00000000>             .DATA.L     _cosf
    0000010C 44800000               .DATA.L     H'44800000
    00000110 <00000000>             .DATA.L     __muls
    00000114 <00000000>             .DATA.L     __stoi
    00000118 <00000000>             .DATA.L     _sinf
      Camera.cpp    43    
      Camera.cpp    44    
      Camera.cpp    45    /****************************************************************************/
      Camera.cpp    46    /*                               move_phi                                   */
      Camera.cpp    47    /****************************************************************************/
      Camera.cpp    48    void Camera::move_phi(float value)
    0000011C              _move_phi__6CameraFf:            ; function: Camera::move_phi(float)
                                                           ; frame size=24
                                                           ; used runtime library name:
                                                           ; __adds, __muls, __stod, __stoi, __gtd, __ltd
    0000011C 2FE6                   MOV.L       R14,@-R15
      Camera.cpp    49    {
      Camera.cpp    50        phi += value;
    0000011E 6053                   MOV         R5,R0
    00000120 D31D                   MOV.L       L264,R3    ; __adds
    00000122 6E43                   MOV         R4,R14
    00000124 4F22                   STS.L       PR,@-R15
    00000126 430B                   JSR         @R3
    00000128 51E4                   MOV.L       @(16,R14),R1
    0000012A 1E04                   MOV.L       R0,@(16,R14)
      Camera.cpp    51        if (phi > 1.507)  phi = 1.507;
    0000012C D21B                   MOV.L       L264+4,R2  ; __stod
    0000012E 7FF8                   ADD         #-8,R15
    00000130 420B                   JSR         @R2
    00000132 2FF6                   MOV.L       R15,@-R15
    00000134 D31A                   MOV.L       L264+8,R3  ; H'083126E9
    00000136 2F36                   MOV.L       R3,@-R15
    00000138 D31A                   MOV.L       L264+12,R3 ; H'3FF81CAC
    0000013A D21B                   MOV.L       L264+16,R2 ; __gtd
    0000013C 420B                   JSR         @R2
    0000013E 2F36                   MOV.L       R3,@-R15
    00000140 8800                   CMP/EQ      #0,R0
    00000142 8901                   BT          L260
    00000144 D319                   MOV.L       L264+20,R3 ; H'3FC0E560
    00000146 1E34                   MOV.L       R3,@(16,R14)
    00000148              L260:                             
      Camera.cpp    52        if (phi < -1.507) phi = -1.507;
    00000148 50E4                   MOV.L       @(16,R14),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Jul-2015 17:22:11  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000014A 7FF8                   ADD         #-8,R15
    0000014C D213                   MOV.L       L264+4,R2  ; __stod
    0000014E 420B                   JSR         @R2
    00000150 2FF6                   MOV.L       R15,@-R15
    00000152 D313                   MOV.L       L264+8,R3  ; H'083126E9
    00000154 D217                   MOV.L       L264+28,R2 ; __ltd
    00000156 2F36                   MOV.L       R3,@-R15
    00000158 D315                   MOV.L       L264+24,R3 ; H'BFF81CAC
    0000015A 420B                   JSR         @R2
    0000015C 2F36                   MOV.L       R3,@-R15
    0000015E 8800                   CMP/EQ      #0,R0
    00000160 8901                   BT          L261
    00000162 D315                   MOV.L       L264+32,R3 ; H'BFC0E560
    00000164 1E34                   MOV.L       R3,@(16,R14)
    00000166              L261:                             
      Camera.cpp    53        cos_phi = cosf(phi) * SHIFT_V;
    00000166 D215                   MOV.L       L264+36,R2 ; _cosf
    00000168 420B                   JSR         @R2
    0000016A 54E4                   MOV.L       @(16,R14),R4
    0000016C D114                   MOV.L       L264+40,R1 ; H'44800000
    0000016E D315                   MOV.L       L264+44,R3 ; __muls
    00000170 430B                   JSR         @R3
    00000172 0009                   NOP
    00000174 D214                   MOV.L       L264+48,R2 ; __stoi
    00000176 420B                   JSR         @R2
    00000178 0009                   NOP
    0000017A 1E07                   MOV.L       R0,@(28,R14)
      Camera.cpp    54        sin_phi = sinf(phi) * SHIFT_V;
    0000017C D313                   MOV.L       L264+52,R3 ; _sinf
    0000017E 430B                   JSR         @R3
    00000180 54E4                   MOV.L       @(16,R14),R4
    00000182 D10F                   MOV.L       L264+40,R1 ; H'44800000
    00000184 D20F                   MOV.L       L264+44,R2 ; __muls
    00000186 420B                   JSR         @R2
    00000188 0009                   NOP
    0000018A D30F                   MOV.L       L264+48,R3 ; __stoi
    0000018C 430B                   JSR         @R3
    0000018E 0009                   NOP
    00000190 1E08                   MOV.L       R0,@(32,R14)
      Camera.cpp    55    }
    00000192 4F26                   LDS.L       @R15+,PR
    00000194 000B                   RTS
    00000196 6EF6                   MOV.L       @R15+,R14
    00000198              L264:                             
    00000198 <00000000>             .DATA.L     __adds
    0000019C <00000000>             .DATA.L     __stod
    000001A0 083126E9               .DATA.L     H'083126E9
    000001A4 3FF81CAC               .DATA.L     H'3FF81CAC
    000001A8 <00000000>             .DATA.L     __gtd
    000001AC 3FC0E560               .DATA.L     H'3FC0E560
    000001B0 BFF81CAC               .DATA.L     H'BFF81CAC
    000001B4 <00000000>             .DATA.L     __ltd
    000001B8 BFC0E560               .DATA.L     H'BFC0E560
    000001BC <00000000>             .DATA.L     _cosf
    000001C0 44800000               .DATA.L     H'44800000
    000001C4 <00000000>             .DATA.L     __muls
    000001C8 <00000000>             .DATA.L     __stoi




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Jul-2015 17:22:11  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001CC <00000000>             .DATA.L     _sinf




























































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 13-Jul-2015 17:22:11  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:       55



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000001D0 Byte(s)
CONSTANT SECTION (C):                               00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
BSS      SECTION (B):                               00000000 Byte(s)

 TOTAL PROGRAM SIZE: 000001D0 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           10
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           4
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            21






























*** COMMAND PARAMETER ***


  -subcommand=C:\Users\OLIVIE~1\AppData\Local\Temp\hmkE5D7.tmp 

