SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 27-May-2015 12:46:25  PAGE    1

************ OBJECT LISTING ************

FILE NAME: A:\Desktop\From-Far-Casio-Project\Anciennes versions\0.2\REBORN.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        REBORN.c     1    /*****************************************************************/
        REBORN.c     2    /*                                                               */
        REBORN.c     3    /*   CASIO fx-9860G SDK Library                                  */
        REBORN.c     4    /*                                                               */
        REBORN.c     5    /*   File name : [ProjectName].c                                 */
        REBORN.c     6    /*                                                               */
        REBORN.c     7    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
        REBORN.c     8    /*                                                               */
        REBORN.c     9    /*****************************************************************/
        REBORN.c    10    #include "fxlib.h"
        REBORN.c    11    #include "stdio.h"
        REBORN.c    12    #include "MonochromeLib.h"
        REBORN.c    13    void generateOutputs();
        REBORN.c    14    void useOutputs();
        REBORN.c    15    void displayExternal();
        REBORN.c    16    //****************************************************************************
        REBORN.c    17    //  AddIn_main (Sample program main function)
        REBORN.c    18    //
        REBORN.c    19    //  param   :   isAppli   : 1 = This application is launched by MAIN MENU.
        REBORN.c    20    //                        : 0 = This application is launched by a strip in eACT application.
        REBORN.c    21    //
        REBORN.c    22    //              OptionNum : Strip number (0~3)
        REBORN.c    23    //                         (This parameter is only used when isAppli parameter is 0.)
        REBORN.c    24    //
        REBORN.c    25    //  retval  :   1 = No error / 0 = Error
        REBORN.c    26    //
        REBORN.c    27    //****************************************************************************
        REBORN.c    28    int output1, output2, output3;
        REBORN.c    29    int const X0=1580160; // les trois seed sont considerees comme origines de l'espace. MULTIPLES DE 128, X0-
                         +1580160/128 donne le cube actuel(je crois)
        REBORN.c    30    int const Y0=2144640;
        REBORN.c    31    int const Z0=2745088;
        REBORN.c    32    int X=0;         // coordonees    X%128 donne donc x dans le cube actuel
        REBORN.c    33    int Y=0;
        REBORN.c    34    int Z=0;
        REBORN.c    35    int planetStorageX1[125];
        REBORN.c    36    int planetStorageY1[125];
        REBORN.c    37    int planetStorageZ1[125];
        REBORN.c    38    char i = 0;
        REBORN.c    39    int planetDensity = 0;
        REBORN.c    40    int planetX, planetY, planetZ;
        REBORN.c    41    int AddIn_main(int isAppli, unsigned short OptionNum){
P   00000000              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=16
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 4F22                   STS.L       PR,@-R15
        REBORN.c    42        generateOutputs();
    00000008 B048                   BSR         _generateOutputs
    0000000A 0009                   NOP
        REBORN.c    43        displayExternal(0);
    0000000C B010                   BSR         _displayExternal
    0000000E E400                   MOV         #0,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 27-May-2015 12:46:25  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000010 DC45                   MOV.L       L426+8,R12 ; _IsKeyDown
    00000012 DD46                   MOV.L       L426+12,R13; _Sleep
    00000014 9E84                   MOV.W       L426,R14   ; H'7534
        REBORN.c    44        while(!IsKeyDown(KEY_CTRL_EXE)){
    00000016 A002                   BRA         L416
    00000018 0009                   NOP
    0000001A              L417:                             
        REBORN.c    45            Sleep(10);
    0000001A 4D0B                   JSR         @R13
    0000001C E40A                   MOV         #10,R4
    0000001E              L416:                             
    0000001E 4C0B                   JSR         @R12
    00000020 64E3                   MOV         R14,R4
    00000022 2008                   TST         R0,R0
    00000024 89F9                   BT          L417
        REBORN.c    46        }
        REBORN.c    47    }
    00000026 4F26                   LDS.L       @R15+,PR
    00000028 6CF6                   MOV.L       @R15+,R12
    0000002A 6DF6                   MOV.L       @R15+,R13
    0000002C 000B                   RTS
    0000002E 6EF6                   MOV.L       @R15+,R14
        REBORN.c    48    void displayExternal(call){
    00000030              _displayExternal:                ; function: displayExternal
                                                           ; frame size=32
    00000030 2FE6                   MOV.L       R14,@-R15
        REBORN.c    49        i = 0;
    00000032 E300                   MOV         #0,R3
    00000034 2FD6                   MOV.L       R13,@-R15
        REBORN.c    50        if(call==0){
    00000036 2448                   TST         R4,R4
    00000038 DE3D                   MOV.L       L426+16,R14; _i
    0000003A 2FC6                   MOV.L       R12,@-R15
    0000003C 2FB6                   MOV.L       R11,@-R15
    0000003E 2FA6                   MOV.L       R10,@-R15
    00000040 2F96                   MOV.L       R9,@-R15
    00000042 2F86                   MOV.L       R8,@-R15
    00000044 4F22                   STS.L       PR,@-R15
    00000046 8F20                   BF/S        L418
    00000048 2E30                   MOV.B       R3,@R14
        REBORN.c    51            ML_clear_vram();
    0000004A D13A                   MOV.L       L426+20,R1 ; _ML_clear_vram
    0000004C 410B                   JSR         @R1
    0000004E 0009                   NOP
    00000050 D839                   MOV.L       L426+24,R8 ; _planetStorageY1
    00000052 D93A                   MOV.L       L426+28,R9 ; _planetStorageZ1
    00000054 DA3A                   MOV.L       L426+32,R10; _ML_filled_circle
    00000056 DB3B                   MOV.L       L426+36,R11; _planetDensity
    00000058 9D63                   MOV.W       L426+2,R13 ; H'0080
        REBORN.c    52            while(i <= planetDensity){
    0000005A A012                   BRA         L419
    0000005C 0009                   NOP
    0000005E              L420:                             
        REBORN.c    53                ML_filled_circle(128-planetStorageX1[i], 128-planetStorageY1[i], planetStorageZ1[i], 1);
    0000005E E701                   MOV         #1,R7
    00000060 6CE0                   MOV.B       @R14,R12
    00000062 65D3                   MOV         R13,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 27-May-2015 12:46:25  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000064 4C08                   SHLL2       R12
    00000066 60C3                   MOV         R12,R0
    00000068 069E                   MOV.L       @(R0,R9),R6
    0000006A 64D3                   MOV         R13,R4
    0000006C 038E                   MOV.L       @(R0,R8),R3
    0000006E 3538                   SUB         R3,R5
    00000070 D335                   MOV.L       L426+40,R3 ; _planetStorageX1
    00000072 033E                   MOV.L       @(R0,R3),R3
    00000074 4A0B                   JSR         @R10
    00000076 3438                   SUB         R3,R4
        REBORN.c    54                ++i;
    00000078 62E0                   MOV.B       @R14,R2
    0000007A 7201                   ADD         #1,R2
        REBORN.c    55    //            Sleep(30);
        REBORN.c    56                ML_display_vram();
    0000007C D333                   MOV.L       L426+44,R3 ; _ML_display_vram
    0000007E 430B                   JSR         @R3
    00000080 2E20                   MOV.B       R2,@R14
    00000082              L419:                             
    00000082 61E0                   MOV.B       @R14,R1
    00000084 63B2                   MOV.L       @R11,R3
    00000086 3137                   CMP/GT      R3,R1
    00000088 8BE9                   BF          L420
    0000008A              L418:                             
        REBORN.c    57            }
        REBORN.c    58        }
        REBORN.c    59    }
    0000008A 4F26                   LDS.L       @R15+,PR
    0000008C 68F6                   MOV.L       @R15+,R8
    0000008E 69F6                   MOV.L       @R15+,R9
    00000090 6AF6                   MOV.L       @R15+,R10
    00000092 6BF6                   MOV.L       @R15+,R11
    00000094 6CF6                   MOV.L       @R15+,R12
    00000096 6DF6                   MOV.L       @R15+,R13
    00000098 000B                   RTS
    0000009A 6EF6                   MOV.L       @R15+,R14
        REBORN.c    60    void generateOutputs(){// genere 3 constantes en fonc de X Y Z et des seed X0 Y0 Z0
    0000009C              _generateOutputs:                ; function: generateOutputs
                                                           ; frame size=12
                                                           ; used runtime library name:
                                                           ; __modls
    0000009C 2FE6                   MOV.L       R14,@-R15
    0000009E 2FD6                   MOV.L       R13,@-R15
    000000A0 4F22                   STS.L       PR,@-R15
        REBORN.c    61        //int local, local1;
        REBORN.c    62        //local = X0-(X/128);
        REBORN.c    63        //while (local>1000){
        REBORN.c    64        //    local /= 10;
        REBORN.c    65        //}
        REBORN.c    66        rand(X);
    000000A2 DE2B                   MOV.L       L426+48,R14; _rand
    000000A4 D32B                   MOV.L       L426+52,R3 ; _X
    000000A6 4E0B                   JSR         @R14
    000000A8 6432                   MOV.L       @R3,R4
        REBORN.c    67        output1 = rand() % 999;
    000000AA 9D3B                   MOV.W       L426+4,R13 ; H'03E7
    000000AC 4E0B                   JSR         @R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 27-May-2015 12:46:25  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000AE 0009                   NOP
    000000B0 D229                   MOV.L       L426+56,R2 ; __modls
    000000B2 6103                   MOV         R0,R1
    000000B4 420B                   JSR         @R2
    000000B6 60D3                   MOV         R13,R0
    000000B8 D328                   MOV.L       L426+60,R3 ; _output1
    000000BA 2302                   MOV.L       R0,@R3
        REBORN.c    68        //output1 = local;
        REBORN.c    69        //local = Y0-(Y/128);
        REBORN.c    70        //while (local>1000){
        REBORN.c    71        //    local /= 10;
        REBORN.c    72        //}
        REBORN.c    73        rand(Y);
    000000BC D228                   MOV.L       L426+64,R2 ; _Y
    000000BE 4E0B                   JSR         @R14
    000000C0 6422                   MOV.L       @R2,R4
        REBORN.c    74        output2 = rand() % 999;
    000000C2 4E0B                   JSR         @R14
    000000C4 0009                   NOP
    000000C6 6103                   MOV         R0,R1
    000000C8 D323                   MOV.L       L426+56,R3 ; __modls
    000000CA 430B                   JSR         @R3
    000000CC 60D3                   MOV         R13,R0
    000000CE D225                   MOV.L       L426+68,R2 ; _output2
        REBORN.c    75        //output2 = local;
        REBORN.c    76        //local = Z0-(Z/128);
        REBORN.c    77        //while (local>1000){
        REBORN.c    78        //    local /= 10;
        REBORN.c    79        //}
        REBORN.c    80        rand(Z);
    000000D0 D325                   MOV.L       L426+72,R3 ; _Z
    000000D2 2202                   MOV.L       R0,@R2
    000000D4 4E0B                   JSR         @R14
    000000D6 6432                   MOV.L       @R3,R4
        REBORN.c    81        output3 = rand() % 999;
    000000D8 4E0B                   JSR         @R14
    000000DA 0009                   NOP
    000000DC D21E                   MOV.L       L426+56,R2 ; __modls
    000000DE 6103                   MOV         R0,R1
    000000E0 420B                   JSR         @R2
    000000E2 60D3                   MOV         R13,R0
    000000E4 D321                   MOV.L       L426+76,R3 ; _output3
    000000E6 2302                   MOV.L       R0,@R3
        REBORN.c    82        //output3 = local;
        REBORN.c    83        //output1=output1*X;
        REBORN.c    84        //output2=output2*Y;
        REBORN.c    85        //output3=output3*Z;
        REBORN.c    86        //do{                               // les outputs sont redimenssiones a un maximum de 999 
        REBORN.c    87        //    local1 = output1%10;
        REBORN.c    88        //    output1 = (output1-local1)/10;
        REBORN.c    89        //} while (output1>1000);
        REBORN.c    90        //do{
        REBORN.c    91        //    local1 = output2%10;
        REBORN.c    92        //    output2 = (output2-local1)/10;
        REBORN.c    93        //} while (output2>1000);
        REBORN.c    94        //do
        REBORN.c    95        //{




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 27-May-2015 12:46:25  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        REBORN.c    96        //    local1 = output3%10;
        REBORN.c    97        //    output3 = (output3-local1)/10;
        REBORN.c    98        //} while (output3>1000);
        REBORN.c    99    
        REBORN.c   100        useOutputs();
    000000E8 4F26                   LDS.L       @R15+,PR
    000000EA 6DF6                   MOV.L       @R15+,R13
    000000EC 6EF6                   MOV.L       @R15+,R14
        REBORN.c   101    }
        REBORN.c   102    void useOutputs(){// rempli les listes d'infos des planetes grace aux outputs (a refaire si systemes solai
                         +res)
    000000EE              _useOutputs:                     ; function: useOutputs
                                                           ; frame size=32
                                                           ; used runtime library name:
                                                           ; __divls, __modls
    000000EE 2FE6                   MOV.L       R14,@-R15
    000000F0 2FD6                   MOV.L       R13,@-R15
    000000F2 2FC6                   MOV.L       R12,@-R15
    000000F4 2FB6                   MOV.L       R11,@-R15
    000000F6 2FA6                   MOV.L       R10,@-R15
    000000F8 2F96                   MOV.L       R9,@-R15
    000000FA 2F86                   MOV.L       R8,@-R15
    000000FC 4F22                   STS.L       PR,@-R15
        REBORN.c   103        planetDensity = 16 + (output1 / 10);
    000000FE D817                   MOV.L       L426+60,R8 ; _output1
    00000100 D31B                   MOV.L       L426+80,R3 ; __divls
    00000102 6182                   MOV.L       @R8,R1
    00000104 430B                   JSR         @R3
    00000106 E00A                   MOV         #10,R0
    00000108 D20E                   MOV.L       L426+36,R2 ; _planetDensity
        REBORN.c   104        planetX, planetY, planetZ;
        REBORN.c   105        for (i = 26; i <= planetDensity+26; ++i){
    0000010A E31A                   MOV         #26,R3
    0000010C D919                   MOV.L       L426+84,R9 ; _planetZ
    0000010E 7010                   ADD         #16,R0
    00000110 DA19                   MOV.L       L426+88,R10; _planetY
    00000112 2202                   MOV.L       R0,@R2
    00000114 DB19                   MOV.L       L426+92,R11; _planetX
    00000116 9C04                   MOV.W       L426+2,R12 ; H'0080
    00000118 DD0D                   MOV.L       L426+48,R13; _rand
    0000011A DE05                   MOV.L       L426+16,R14; _i
    0000011C A06E                   BRA         L421
    0000011E 2E30                   MOV.B       R3,@R14
    00000120              L426:                             
    00000120 7534                   .DATA.W     H'7534
    00000122 0080                   .DATA.W     H'0080
    00000124 03E7                   .DATA.W     H'03E7
    00000126 0000                   .DATA.W     0
    00000128 <00000000>             .DATA.L     _IsKeyDown
    0000012C <00000000>             .DATA.L     _Sleep
    00000130 <00000000>             .DATA.L     _i
    00000134 <00000000>             .DATA.L     _ML_clear_vram
    00000138 <00000000>             .DATA.L     _planetStorageY1
    0000013C <00000000>             .DATA.L     _planetStorageZ1
    00000140 <00000000>             .DATA.L     _ML_filled_circle
    00000144 <00000000>             .DATA.L     _planetDensity
    00000148 <00000000>             .DATA.L     _planetStorageX1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 27-May-2015 12:46:25  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000014C <00000000>             .DATA.L     _ML_display_vram
    00000150 <00000000>             .DATA.L     _rand
    00000154 <00000000>             .DATA.L     _X
    00000158 <00000000>             .DATA.L     __modls
    0000015C <00000000>             .DATA.L     _output1
    00000160 <00000000>             .DATA.L     _Y
    00000164 <00000000>             .DATA.L     _output2
    00000168 <00000000>             .DATA.L     _Z
    0000016C <00000000>             .DATA.L     _output3
    00000170 <00000000>             .DATA.L     __divls
    00000174 <00000000>             .DATA.L     _planetZ
    00000178 <00000000>             .DATA.L     _planetY
    0000017C <00000000>             .DATA.L     _planetX
    00000180              L422:                             
        REBORN.c   106            rand(output1+i);
    00000180 64E0                   MOV.B       @R14,R4
    00000182 6382                   MOV.L       @R8,R3
    00000184 4D0B                   JSR         @R13
    00000186 343C                   ADD         R3,R4
        REBORN.c   107            planetX = rand() % 128;
    00000188 4D0B                   JSR         @R13
    0000018A 0009                   NOP
    0000018C D223                   MOV.L       L427+2,R2  ; __modls
    0000018E 6103                   MOV         R0,R1
    00000190 420B                   JSR         @R2
    00000192 60C3                   MOV         R12,R0
    00000194 2B02                   MOV.L       R0,@R11
        REBORN.c   108    //        while(planetX<0){
        REBORN.c   109    //            planetX=planetX*10;
        REBORN.c   110    //        }
        REBORN.c   111    //        while(planetX>128){
        REBORN.c   112    //            planetX=planetX/10;
        REBORN.c   113    //        }
        REBORN.c   114            rand(output2+i);
    00000196 64E0                   MOV.B       @R14,R4
    00000198 D221                   MOV.L       L427+6,R2  ; _output2
    0000019A 6322                   MOV.L       @R2,R3
    0000019C 4D0B                   JSR         @R13
    0000019E 343C                   ADD         R3,R4
        REBORN.c   115            planetY = rand() % 128;
    000001A0 4D0B                   JSR         @R13
    000001A2 0009                   NOP
    000001A4 D31D                   MOV.L       L427+2,R3  ; __modls
    000001A6 6103                   MOV         R0,R1
    000001A8 430B                   JSR         @R3
    000001AA 60C3                   MOV         R12,R0
    000001AC 2A02                   MOV.L       R0,@R10
        REBORN.c   116    //        while(planetY<0){
        REBORN.c   117    //            planetY=planetY*10;
        REBORN.c   118    //        }
        REBORN.c   119    //        while(planetY>128){
        REBORN.c   120    //            planetY=planetY/10;
        REBORN.c   121    //        }
        REBORN.c   122            rand(output3+i);
    000001AE 64E0                   MOV.B       @R14,R4
    000001B0 D21C                   MOV.L       L427+10,R2 ; _output3
    000001B2 6322                   MOV.L       @R2,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 27-May-2015 12:46:25  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001B4 4D0B                   JSR         @R13
    000001B6 343C                   ADD         R3,R4
        REBORN.c   123            planetZ = (rand() % 2)+1;
    000001B8 4D0B                   JSR         @R13
    000001BA 0009                   NOP
    000001BC 4011                   CMP/PZ      R0
    000001BE 8B01                   BF          L423
    000001C0 A005                   BRA         L424
    000001C2 C901                   AND         #1,R0
    000001C4              L423:                             
    000001C4 6007                   NOT         R0,R0
    000001C6 7001                   ADD         #1,R0
    000001C8 C901                   AND         #1,R0
    000001CA 6007                   NOT         R0,R0
    000001CC 7001                   ADD         #1,R0
    000001CE              L424:                             
    000001CE 7001                   ADD         #1,R0
    000001D0 2902                   MOV.L       R0,@R9
        REBORN.c   124    //        while(planetZ<0){
        REBORN.c   125    //            planetZ=planetZ*10;
        REBORN.c   126    //        }
        REBORN.c   127    //        while(planetZ>128){
        REBORN.c   128    //            planetZ=planetZ/10;
        REBORN.c   129    //        }
        REBORN.c   130            planetStorageX1[i-26] = planetX;
    000001D2 62E0                   MOV.B       @R14,R2
    000001D4 D014                   MOV.L       L427+14,R0 ; _planetStorageX1
    000001D6 72E6                   ADD         #-26,R2
    000001D8 63B2                   MOV.L       @R11,R3
    000001DA 4208                   SHLL2       R2
    000001DC 0236                   MOV.L       R3,@(R0,R2)
        REBORN.c   131            planetStorageY1[i-26] = planetY;
    000001DE 62E0                   MOV.B       @R14,R2
    000001E0 D012                   MOV.L       L427+18,R0 ; _planetStorageY1
    000001E2 72E6                   ADD         #-26,R2
    000001E4 63A2                   MOV.L       @R10,R3
    000001E6 4208                   SHLL2       R2
    000001E8 0236                   MOV.L       R3,@(R0,R2)
        REBORN.c   132            planetStorageZ1[i-26] = planetZ;
    000001EA 62E0                   MOV.B       @R14,R2
    000001EC D010                   MOV.L       L427+22,R0 ; _planetStorageZ1
    000001EE 72E6                   ADD         #-26,R2
    000001F0 6392                   MOV.L       @R9,R3
    000001F2 4208                   SHLL2       R2
    000001F4 0236                   MOV.L       R3,@(R0,R2)
    000001F6 62E0                   MOV.B       @R14,R2
    000001F8 7201                   ADD         #1,R2
    000001FA 2E20                   MOV.B       R2,@R14
    000001FC              L421:                             
    000001FC 63E0                   MOV.B       @R14,R3
    000001FE D10D                   MOV.L       L427+26,R1 ; _planetDensity
    00000200 6212                   MOV.L       @R1,R2
    00000202 721A                   ADD         #26,R2
    00000204 3327                   CMP/GT      R2,R3
    00000206 8BBB                   BF          L422
        REBORN.c   133        }
        REBORN.c   134    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 27-May-2015 12:46:25  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000208 4F26                   LDS.L       @R15+,PR
    0000020A 68F6                   MOV.L       @R15+,R8
    0000020C 69F6                   MOV.L       @R15+,R9
    0000020E 6AF6                   MOV.L       @R15+,R10
    00000210 6BF6                   MOV.L       @R15+,R11
    00000212 6CF6                   MOV.L       @R15+,R12
    00000214 6DF6                   MOV.L       @R15+,R13
    00000216 000B                   RTS
    00000218 6EF6                   MOV.L       @R15+,R14
    0000021A              L427:                             
    0000021A 0000                   .DATA.W     0
    0000021C <00000000>             .DATA.L     __modls
    00000220 <00000000>             .DATA.L     _output2
    00000224 <00000000>             .DATA.L     _output3
    00000228 <00000000>             .DATA.L     _planetStorageX1
    0000022C <00000000>             .DATA.L     _planetStorageY1
    00000230 <00000000>             .DATA.L     _planetStorageZ1
    00000234 <00000000>             .DATA.L     _planetDensity
        REBORN.c   135    
        REBORN.c   136    
        REBORN.c   137    
        REBORN.c   138    
        REBORN.c   139    //****************************************************************************
        REBORN.c   140    //**************                                              ****************
        REBORN.c   141    //**************                 Notice!                      ****************
        REBORN.c   142    //**************                                              ****************
        REBORN.c   143    //**************  Please do not change the following source.  ****************
        REBORN.c   144    //**************                                              ****************
        REBORN.c   145    //****************************************************************************
        REBORN.c   146    
        REBORN.c   147    
        REBORN.c   148    #pragma section _BR_Size
        REBORN.c   149    unsigned long BR_Size;
        REBORN.c   150    #pragma section
        REBORN.c   151    
        REBORN.c   152    
        REBORN.c   153    #pragma section _TOP
        REBORN.c   154    
        REBORN.c   155    //****************************************************************************
        REBORN.c   156    //  InitializeSystem
        REBORN.c   157    //
        REBORN.c   158    //  param   :   isAppli   : 1 = Application / 0 = eActivity
        REBORN.c   159    //              OptionNum : Option Number (only eActivity)
        REBORN.c   160    //
        REBORN.c   161    //  retval  :   1 = No error / 0 = Error
        REBORN.c   162    //
        REBORN.c   163    //****************************************************************************
        REBORN.c   164    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
        REBORN.c   165    {
        REBORN.c   166        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L428+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L428:                             
    00000006 0000                   .DATA.W     0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 27-May-2015 12:46:25  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
        REBORN.c   167    }
        REBORN.c   168    
        REBORN.c   169    #pragma section
C   00000000              _X0:                             ; static: X0
    00000000 00181C80               .DATA.L     H'00181C80
    00000004              _Y0:                             ; static: Y0
    00000004 0020B980               .DATA.L     H'0020B980
    00000008              _Z0:                             ; static: Z0
    00000008 0029E300               .DATA.L     H'0029E300
D   00000000              _X:                              ; static: X
    00000000 00000000               .DATA.L     H'00000000
    00000004              _Y:                              ; static: Y
    00000004 00000000               .DATA.L     H'00000000
    00000008              _Z:                              ; static: Z
    00000008 00000000               .DATA.L     H'00000000
    0000000C              _i:                              ; static: i
    0000000C 00                     .DATA.B     H'00
    0000000D 00000001               .RES.B      1
    0000000E 00000002               .RES.W      1
    00000010              _planetDensity:                  ; static: planetDensity
    00000010 00000000               .DATA.L     H'00000000
B   00000000              _output1:                        ; static: output1
    00000000 00000004               .RES.L      1
    00000004              _output2:                        ; static: output2
    00000004 00000004               .RES.L      1
    00000008              _output3:                        ; static: output3
    00000008 00000004               .RES.L      1
    0000000C              _planetStorageX1:                ; static: planetStorageX1
    0000000C 000001F4               .RES.L      125
    00000200              _planetStorageY1:                ; static: planetStorageY1
    00000200 000001F4               .RES.L      125
    000003F4              _planetStorageZ1:                ; static: planetStorageZ1
    000003F4 000001F4               .RES.L      125
    000005E8              _planetX:                        ; static: planetX
    000005E8 00000004               .RES.L      1
    000005EC              _planetY:                        ; static: planetY
    000005EC 00000004               .RES.L      1
    000005F0              _planetZ:                        ; static: planetZ
    000005F0 00000004               .RES.L      1
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1



















SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 27-May-2015 12:46:25  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      169



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000238 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               0000000C Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000014 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               000005F4 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 0000085C Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:            9
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          23
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            44






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\Az\AppData\Local\Temp\hmkDB62.tmp 

