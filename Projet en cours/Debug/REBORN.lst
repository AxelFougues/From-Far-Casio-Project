SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE    1

************ OBJECT LISTING ************

FILE NAME: A:\Desktop\From-Far-Casio-Project\Projet en cours\REBORN.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        REBORN.c     1    /*****************************************************************/
        REBORN.c     2    /*                                                               */
        REBORN.c     3    /*   CASIO fx-9860G SDK Library                                  */
        REBORN.c     4    /*                                                               */
        REBORN.c     5    /*   File name : [ProjectName].c                                 */
        REBORN.c     6    /*                                                               */
        REBORN.c     7    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
        REBORN.c     8    /*                                                               */
        REBORN.c     9    /*****************************************************************/
        REBORN.c    10    #include "fxlib.h"
        REBORN.c    11    #include "stdio.h"
        REBORN.c    12    #include "math.h"
        REBORN.c    13    #include "MonochromeLib.h"
        REBORN.c    14    void userInterface();
        REBORN.c    15    void display();
        REBORN.c    16    void generateOutputs();
        REBORN.c    17    void useOutputs();
        REBORN.c    18    void displayExternal();
        REBORN.c    19    //****************************************************************************
        REBORN.c    20    //  AddIn_main (Sample program main function)
        REBORN.c    21    //
        REBORN.c    22    //  param   :   isAppli   : 1 = This application is launched by MAIN MENU.
        REBORN.c    23    //                        : 0 = This application is launched by a strip in eACT application.
        REBORN.c    24    //
        REBORN.c    25    //              OptionNum : Strip number (0~3)
        REBORN.c    26    //                         (This parameter is only used when isAppli parameter is 0.)
        REBORN.c    27    //
        REBORN.c    28    //  retval  :   1 = No error / 0 = Error
        REBORN.c    29    //
        REBORN.c    30    //****************************************************************************
        REBORN.c    31    int output1, output2, output3;
        REBORN.c    32    int const X0=1580160; // les trois seed sont considerees comme origines de l'espace. MULTIPLES DE 128, X0-
                         +1580160/128 donne le cube actuel(je crois)
        REBORN.c    33    int const Y0=2144640;
        REBORN.c    34    int const Z0=2745088;
        REBORN.c    35    int X=1580160;         // coordonees    X%128 donne donc x dans le cube actuel
        REBORN.c    36    int Y=2144640;
        REBORN.c    37    int Z=2745088;
        REBORN.c    38    int sunStorageX[10];
        REBORN.c    39    int sunStorageY[10];
        REBORN.c    40    int sunStorageZ[10];
        REBORN.c    41    int astralStorageX1[90];
        REBORN.c    42    int astralStorageY1[90];
        REBORN.c    43    int astralStorageZ1[90];
        REBORN.c    44    char i, o;
        REBORN.c    45    int systemDensity = 0;
        REBORN.c    46    int planetDensity = 0;
        REBORN.c    47    int planetX, planetY, planetZ, sunX, sunY, sunZ, planetCount;
        REBORN.c    48    int AddIn_main(int isAppli, unsigned short OptionNum){
P   00000000              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=16
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000006 4F22                   STS.L       PR,@-R15
        REBORN.c    49        //userInterface();
        REBORN.c    50        generateOutputs();                                   //normalement on apelle juste userInterface mais 
                         +ca provoque le bug: Lignes de planentes 
    00000008 B154                   BSR         _generateOutputs
    0000000A 0009                   NOP
        REBORN.c    51        displayExternal(0,0,0,0);
    0000000C E700                   MOV         #0,R7
    0000000E 6673                   MOV         R7,R6
    00000010 6573                   MOV         R7,R5
    00000012 B0E5                   BSR         _displayExternal
    00000014 6473                   MOV         R7,R4
    00000016 DC19                   MOV.L       L506+6,R12 ; _IsKeyDown
    00000018 DD19                   MOV.L       L506+10,R13; _Sleep
    0000001A 9E2C                   MOV.W       L506,R14   ; H'7534
        REBORN.c    52        while(!IsKeyDown(KEY_CTRL_EXE)){
    0000001C A002                   BRA         L477
    0000001E 0009                   NOP
    00000020              L478:                             
        REBORN.c    53            Sleep(10);
    00000020 4D0B                   JSR         @R13
    00000022 E40A                   MOV         #10,R4
    00000024              L477:                             
    00000024 4C0B                   JSR         @R12
    00000026 64E3                   MOV         R14,R4
    00000028 2008                   TST         R0,R0
    0000002A 89F9                   BT          L478
        REBORN.c    54        }
        REBORN.c    55    }
    0000002C 4F26                   LDS.L       @R15+,PR
    0000002E 6CF6                   MOV.L       @R15+,R12
    00000030 6DF6                   MOV.L       @R15+,R13
    00000032 000B                   RTS
    00000034 6EF6                   MOV.L       @R15+,R14
        REBORN.c    56    void userInterface(){
    00000036              _userInterface:                  ; function: userInterface
                                                           ; frame size=32
                                                           ; used runtime library name:
                                                           ; __modls
    00000036 2FE6                   MOV.L       R14,@-R15
    00000038 2FD6                   MOV.L       R13,@-R15
    0000003A 2FC6                   MOV.L       R12,@-R15
    0000003C 2FB6                   MOV.L       R11,@-R15
    0000003E 2FA6                   MOV.L       R10,@-R15
    00000040 2F96                   MOV.L       R9,@-R15
    00000042 2F86                   MOV.L       R8,@-R15
    00000044 4F22                   STS.L       PR,@-R15
        REBORN.c    57        int x, y, z;
        REBORN.c    58        x =X%128;
    00000046 9C17                   MOV.W       L506+2,R12 ; H'0080
    00000048 DD0E                   MOV.L       L506+14,R13; _X
    0000004A 61D2                   MOV.L       @R13,R1
    0000004C D30E                   MOV.L       L506+18,R3 ; __modls
    0000004E 430B                   JSR         @R3
    00000050 60C3                   MOV         R12,R0
    00000052 6A03                   MOV         R0,R10
        REBORN.c    59        y =Y%128;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000054 D80D                   MOV.L       L506+22,R8 ; _Y
    00000056 6182                   MOV.L       @R8,R1
    00000058 D20B                   MOV.L       L506+18,R2 ; __modls
    0000005A 420B                   JSR         @R2
    0000005C 60C3                   MOV         R12,R0
    0000005E 6903                   MOV         R0,R9
        REBORN.c    60        z =Z%128;
    00000060 D20B                   MOV.L       L506+26,R2 ; _Z
    00000062 6122                   MOV.L       @R2,R1
    00000064 D308                   MOV.L       L506+18,R3 ; __modls
    00000066 430B                   JSR         @R3
    00000068 60C3                   MOV         R12,R0
        REBORN.c    61        ML_display_vram();
    0000006A D30A                   MOV.L       L506+30,R3 ; _ML_display_vram
    0000006C 430B                   JSR         @R3
    0000006E 6B03                   MOV         R0,R11
    00000070 DE02                   MOV.L       L506+6,R14 ; _IsKeyDown
        REBORN.c    62        while(!(X%128 == 64 && Y%128 == 64 && Z%128 == 64)){   //deplacements           //Sys error quand gauc
                         +he et droite
    00000072 A061                   BRA         L479
    00000074 0009                   NOP
    00000076              L506:                             
    00000076 7534                   .DATA.W     H'7534
    00000078 0080                   .DATA.W     H'0080
    0000007A 0000                   .DATA.W     0
    0000007C <00000000>             .DATA.L     _IsKeyDown
    00000080 <00000000>             .DATA.L     _Sleep
    00000084 <00000000>             .DATA.L     _X
    00000088 <00000000>             .DATA.L     __modls
    0000008C <00000000>             .DATA.L     _Y
    00000090 <00000000>             .DATA.L     _Z
    00000094 <00000000>             .DATA.L     _ML_display_vram
    00000098              L480:                             
        REBORN.c    63            if(IsKeyDown(KEY_CTRL_UP)){
    00000098 948F                   MOV.W       L507,R4    ; H'7542
    0000009A 4E0B                   JSR         @R14
    0000009C 0009                   NOP
    0000009E 2008                   TST         R0,R0
    000000A0 8907                   BT          L481
        REBORN.c    64                --Y;
        REBORN.c    65                display(1,x,y,z);
    000000A2 67B3                   MOV         R11,R7
    000000A4 6282                   MOV.L       @R8,R2
    000000A6 6693                   MOV         R9,R6
    000000A8 72FF                   ADD         #-1,R2
    000000AA 65A3                   MOV         R10,R5
    000000AC 2822                   MOV.L       R2,@R8
    000000AE B063                   BSR         _display
    000000B0 E401                   MOV         #1,R4
    000000B2              L481:                             
        REBORN.c    66            }
        REBORN.c    67            if(IsKeyDown(KEY_CTRL_DOWN)){
    000000B2 9483                   MOV.W       L507+2,R4  ; H'7547
    000000B4 4E0B                   JSR         @R14
    000000B6 0009                   NOP
    000000B8 2008                   TST         R0,R0
    000000BA 8907                   BT          L482




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        REBORN.c    68                ++Y;
    000000BC 6382                   MOV.L       @R8,R3
        REBORN.c    69                display(1,x,y,z);
    000000BE 67B3                   MOV         R11,R7
    000000C0 7301                   ADD         #1,R3
    000000C2 6693                   MOV         R9,R6
    000000C4 2832                   MOV.L       R3,@R8
    000000C6 65A3                   MOV         R10,R5
    000000C8 B056                   BSR         _display
    000000CA E401                   MOV         #1,R4
    000000CC              L482:                             
        REBORN.c    70            }
        REBORN.c    71            if(IsKeyDown(KEY_CTRL_LEFT)){
    000000CC 9477                   MOV.W       L507+4,R4  ; H'7544
    000000CE 4E0B                   JSR         @R14
    000000D0 0009                   NOP
    000000D2 2008                   TST         R0,R0
    000000D4 8907                   BT          L483
        REBORN.c    72                --X;
        REBORN.c    73                display(1,x,y,z);
    000000D6 67B3                   MOV         R11,R7
    000000D8 62D2                   MOV.L       @R13,R2
    000000DA 6693                   MOV         R9,R6
    000000DC 72FF                   ADD         #-1,R2
    000000DE 65A3                   MOV         R10,R5
    000000E0 2D22                   MOV.L       R2,@R13
    000000E2 B049                   BSR         _display
    000000E4 E401                   MOV         #1,R4
    000000E6              L483:                             
        REBORN.c    74            }
        REBORN.c    75            if(IsKeyDown(KEY_CTRL_RIGHT)){
    000000E6 946B                   MOV.W       L507+6,R4  ; H'7545
    000000E8 4E0B                   JSR         @R14
    000000EA 0009                   NOP
    000000EC 2008                   TST         R0,R0
    000000EE 8907                   BT          L484
        REBORN.c    76                ++X;
    000000F0 63D2                   MOV.L       @R13,R3
        REBORN.c    77                display(1,x,y,z);
    000000F2 67B3                   MOV         R11,R7
    000000F4 7301                   ADD         #1,R3
    000000F6 6693                   MOV         R9,R6
    000000F8 2D32                   MOV.L       R3,@R13
    000000FA 65A3                   MOV         R10,R5
    000000FC B03C                   BSR         _display
    000000FE E401                   MOV         #1,R4
    00000100              L484:                             
        REBORN.c    78            }
        REBORN.c    79            if(IsKeyDown(KEY_CTRL_SHIFT)){
    00000100 945F                   MOV.W       L507+8,R4  ; H'7536
    00000102 4E0B                   JSR         @R14
    00000104 0009                   NOP
    00000106 2008                   TST         R0,R0
    00000108 8908                   BT          L485
        REBORN.c    80                --Z;
        REBORN.c    81                display(1,x,y,z);
    0000010A 67B3                   MOV         R11,R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000010C D22E                   MOV.L       L507+14,R2 ; _Z
    0000010E 6693                   MOV         R9,R6
    00000110 6322                   MOV.L       @R2,R3
    00000112 65A3                   MOV         R10,R5
    00000114 73FF                   ADD         #-1,R3
    00000116 2232                   MOV.L       R3,@R2
    00000118 B02E                   BSR         _display
    0000011A E401                   MOV         #1,R4
    0000011C              L485:                             
        REBORN.c    82            }
        REBORN.c    83            if(IsKeyDown(KEY_CTRL_ALPHA)){
    0000011C 9452                   MOV.W       L507+10,R4 ; H'7537
    0000011E 4E0B                   JSR         @R14
    00000120 0009                   NOP
    00000122 2008                   TST         R0,R0
    00000124 8908                   BT          L479
        REBORN.c    84                ++Z;
        REBORN.c    85                display(1,x,y,z);
    00000126 67B3                   MOV         R11,R7
    00000128 D227                   MOV.L       L507+14,R2 ; _Z
    0000012A 6693                   MOV         R9,R6
    0000012C 6322                   MOV.L       @R2,R3
    0000012E 65A3                   MOV         R10,R5
    00000130 7301                   ADD         #1,R3
    00000132 2232                   MOV.L       R3,@R2
    00000134 B020                   BSR         _display
    00000136 E401                   MOV         #1,R4
    00000138              L479:                             
    00000138 61D2                   MOV.L       @R13,R1
    0000013A D324                   MOV.L       L507+18,R3 ; __modls
    0000013C 430B                   JSR         @R3
    0000013E 60C3                   MOV         R12,R0
    00000140 8840                   CMP/EQ      #64,R0
    00000142 8BA9                   BF          L480
    00000144 D222                   MOV.L       L507+22,R2 ; _Y
    00000146 6122                   MOV.L       @R2,R1
    00000148 D320                   MOV.L       L507+18,R3 ; __modls
    0000014A 430B                   JSR         @R3
    0000014C 60C3                   MOV         R12,R0
    0000014E 8840                   CMP/EQ      #64,R0
    00000150 8BA2                   BF          L480
    00000152 D01D                   MOV.L       L507+14,R0 ; _Z
    00000154 D31D                   MOV.L       L507+18,R3 ; __modls
    00000156 6102                   MOV.L       @R0,R1
    00000158 430B                   JSR         @R3
    0000015A 60C3                   MOV         R12,R0
    0000015C 8840                   CMP/EQ      #64,R0
    0000015E 8B9B                   BF          L480
        REBORN.c    86            }
        REBORN.c    87        }
        REBORN.c    88        display(0,x,y,z);
    00000160 4F26                   LDS.L       @R15+,PR
    00000162 67B3                   MOV         R11,R7
    00000164 68F6                   MOV.L       @R15+,R8
    00000166 6693                   MOV         R9,R6
    00000168 69F6                   MOV.L       @R15+,R9
    0000016A 65A3                   MOV         R10,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000016C 6AF6                   MOV.L       @R15+,R10
    0000016E E400                   MOV         #0,R4
    00000170 6BF6                   MOV.L       @R15+,R11
    00000172 6CF6                   MOV.L       @R15+,R12
    00000174 6DF6                   MOV.L       @R15+,R13
    00000176 6EF6                   MOV.L       @R15+,R14
        REBORN.c    89    }
        REBORN.c    90    void display(call,x,y,z){
    00000178              _display:                        ; function: display
                                                           ; frame size=20
    00000178 2FE6                   MOV.L       R14,@-R15
        REBORN.c    91        if(call){
    0000017A 2448                   TST         R4,R4
    0000017C 4F22                   STS.L       PR,@-R15
    0000017E 7FF4                   ADD         #-12,R15
    00000180 2F52                   MOV.L       R5,@R15
    00000182 1F61                   MOV.L       R6,@(4,R15)
    00000184 8D28                   BT/S        L487
    00000186 1F72                   MOV.L       R7,@(8,R15)
        REBORN.c    92            generateOutputs();
    00000188 B094                   BSR         _generateOutputs
    0000018A 0009                   NOP
        REBORN.c    93            useOutputs();
    0000018C B0BE                   BSR         _useOutputs
    0000018E 0009                   NOP
        REBORN.c    94            displayExternal(0,x,y,z);  //cube central
    00000190 57F2                   MOV.L       @(8,R15),R7
    00000192 56F1                   MOV.L       @(4,R15),R6
    00000194 65F2                   MOV.L       @R15,R5
    00000196 B023                   BSR         _displayExternal
    00000198 E400                   MOV         #0,R4
        REBORN.c    95            Z = Z-128;
    0000019A DE0B                   MOV.L       L507+14,R14; _Z
    0000019C 62E2                   MOV.L       @R14,R2
    0000019E 7280                   ADD         #-128,R2
        REBORN.c    96            generateOutputs();
    000001A0 B088                   BSR         _generateOutputs
    000001A2 2E22                   MOV.L       R2,@R14
        REBORN.c    97            useOutputs();
    000001A4 B0B2                   BSR         _useOutputs
    000001A6 0009                   NOP
        REBORN.c    98            displayExternal(-1,x,y,z); //cube central arriere
    000001A8 57F2                   MOV.L       @(8,R15),R7
    000001AA 56F1                   MOV.L       @(4,R15),R6
    000001AC 65F2                   MOV.L       @R15,R5
    000001AE B017                   BSR         _displayExternal
    000001B0 E4FF                   MOV         #-1,R4
        REBORN.c    99            Z = Z+128;
    000001B2 9308                   MOV.W       L507+12,R3 ; H'0080
    000001B4 62E2                   MOV.L       @R14,R2
    000001B6 A00D                   BRA         L504
    000001B8 0009                   NOP
    000001BA              L507:                             
    000001BA 7542                   .DATA.W     H'7542
    000001BC 7547                   .DATA.W     H'7547
    000001BE 7544                   .DATA.W     H'7544
    000001C0 7545                   .DATA.W     H'7545




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001C2 7536                   .DATA.W     H'7536
    000001C4 7537                   .DATA.W     H'7537
    000001C6 0080                   .DATA.W     H'0080
    000001C8 <00000000>             .DATA.L     _Z
    000001CC <00000000>             .DATA.L     __modls
    000001D0 <00000000>             .DATA.L     _Y
    000001D4              L504:                             
    000001D4 323C                   ADD         R3,R2
    000001D6 2E22                   MOV.L       R2,@R14
    000001D8              L487:                             
        REBORN.c   100            //if(x<=64 && y<=64){            //VVV cubes lateraux , n'existent pas encore dans dispExternal, l
                         +es integrer depuis la v 0.1
        REBORN.c   101            //    for (i = 0; i < 1; ++i){
        REBORN.c   102            //        X = X-128;
        REBORN.c   103            //        generateOutputs();
        REBORN.c   104            //        useOutputs();
        REBORN.c   105            //        displayExternal(1+i);
        REBORN.c   106            //        Y = Y-128;
        REBORN.c   107            //        generateOutputs();
        REBORN.c   108            //        useOutputs();
        REBORN.c   109            //        displayExternal(3+i);
        REBORN.c   110            //        X = X+128;
        REBORN.c   111            //        generateOutputs();
        REBORN.c   112            //        useOutputs();
        REBORN.c   113            //        displayExternal(5+i);
        REBORN.c   114            //        Y = Y+128;
        REBORN.c   115            //        Z = Z-128;
        REBORN.c   116            //    }
        REBORN.c   117            //    Z = Z+128;
        REBORN.c   118            //}
        REBORN.c   119            //if(x>=64 && y<=64){
        REBORN.c   120            //    for (i = 0; i < 1; ++i){
        REBORN.c   121            //        X = X+128;
        REBORN.c   122            //        generateOutputs();
        REBORN.c   123            //        useOutputs();
        REBORN.c   124            //        displayExternal(1+i);
        REBORN.c   125            //        Y = Y-128;
        REBORN.c   126            //        generateOutputs();
        REBORN.c   127            //        useOutputs();
        REBORN.c   128            //        displayExternal(3+i);
        REBORN.c   129            //        X = X-128;
        REBORN.c   130            //        generateOutputs();
        REBORN.c   131            //        useOutputs();
        REBORN.c   132            //        displayExternal(5+i);
        REBORN.c   133            //        Y = Y+128;
        REBORN.c   134            //        Z = Z-128;
        REBORN.c   135            //    }
        REBORN.c   136            //    Z = Z+128;
        REBORN.c   137            //}
        REBORN.c   138            //if(x<=64 && y>=64){
        REBORN.c   139            //    for (i = 0; i < 1; ++i){
        REBORN.c   140            //        X = X-128;
        REBORN.c   141            //        generateOutputs();
        REBORN.c   142            //        useOutputs();
        REBORN.c   143            //        displayExternal(1+i);
        REBORN.c   144            //        Y = Y+128;
        REBORN.c   145            //        generateOutputs();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        REBORN.c   146            //        useOutputs();
        REBORN.c   147            //        displayExternal(3+i);
        REBORN.c   148            //        X = X+128;
        REBORN.c   149            //        generateOutputs();
        REBORN.c   150            //        useOutputs();
        REBORN.c   151            //        displayExternal(5+i);
        REBORN.c   152            //        Y = Y-128;
        REBORN.c   153            //        Z = Z-128;
        REBORN.c   154            //    }
        REBORN.c   155            //    Z = Z+128;
        REBORN.c   156            //}
        REBORN.c   157            //if(x>=64 && y>=64){
        REBORN.c   158            //    for (i = 0; i < 1; ++i){
        REBORN.c   159            //        X = X+128;
        REBORN.c   160            //        generateOutputs();
        REBORN.c   161            //        useOutputs();
        REBORN.c   162            //        displayExternal(1+i);
        REBORN.c   163            //        Y = Y+128;
        REBORN.c   164            //        generateOutputs();
        REBORN.c   165            //        useOutputs();
        REBORN.c   166            //        displayExternal(3+i);
        REBORN.c   167            //        X = X-128;
        REBORN.c   168            //        generateOutputs();
        REBORN.c   169            //        useOutputs();
        REBORN.c   170            //        displayExternal(5+i);
        REBORN.c   171            //        Y = Y-128;
        REBORN.c   172            //        Z = Z-128;
        REBORN.c   173            //    }
        REBORN.c   174            //    Z = Z+128;
        REBORN.c   175            //}
        REBORN.c   176        
        REBORN.c   177        } //determine le cube a generer et apelle External 
        REBORN.c   178    }
    000001D8 7F0C                   ADD         #12,R15
    000001DA 4F26                   LDS.L       @R15+,PR
    000001DC 000B                   RTS
    000001DE 6EF6                   MOV.L       @R15+,R14
        REBORN.c   179    void displayExternal(call,x,y,z){
    000001E0              _displayExternal:                ; function: displayExternal
                                                           ; frame size=32
    000001E0 2FE6                   MOV.L       R14,@-R15
        REBORN.c   180        i = 0;
    000001E2 E300                   MOV         #0,R3
    000001E4 2FD6                   MOV.L       R13,@-R15
        REBORN.c   181        if(call==0){
    000001E6 2448                   TST         R4,R4
    000001E8 DE25                   MOV.L       L508,R14   ; _i
    000001EA 2FC6                   MOV.L       R12,@-R15
    000001EC 2FB6                   MOV.L       R11,@-R15
    000001EE 6B63                   MOV         R6,R11
    000001F0 2FA6                   MOV.L       R10,@-R15
    000001F2 6A53                   MOV         R5,R10
    000001F4 2F96                   MOV.L       R9,@-R15
    000001F6 6973                   MOV         R7,R9
    000001F8 2F86                   MOV.L       R8,@-R15
    000001FA 4F22                   STS.L       PR,@-R15
    000001FC 8F37                   BF/S        L488




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001FE 2E30                   MOV.B       R3,@R14
        REBORN.c   182            ML_clear_vram();
    00000200 D120                   MOV.L       L508+4,R1  ; _ML_clear_vram
    00000202 410B                   JSR         @R1
    00000204 0009                   NOP
    00000206 D820                   MOV.L       L508+8,R8  ; _planetCount
    00000208 DD20                   MOV.L       L508+12,R13; _ML_display_vram
        REBORN.c   183            while(i <= planetCount){
    0000020A A012                   BRA         L489
    0000020C 0009                   NOP
    0000020E              L490:                             
        REBORN.c   184                ML_filled_circle(x+astralStorageX1[i], y+astralStorageY1[i], z+astralStorageZ1[i], 1);
    0000020E E701                   MOV         #1,R7
    00000210 6CE0                   MOV.B       @R14,R12
    00000212 4C08                   SHLL2       R12
    00000214 D01E                   MOV.L       L508+16,R0 ; _astralStorageZ1
    00000216 06CE                   MOV.L       @(R0,R12),R6
    00000218 D01E                   MOV.L       L508+20,R0 ; _astralStorageY1
    0000021A 369C                   ADD         R9,R6
    0000021C D31F                   MOV.L       L508+28,R3 ; _ML_filled_circle
    0000021E 05CE                   MOV.L       @(R0,R12),R5
    00000220 D01D                   MOV.L       L508+24,R0 ; _astralStorageX1
    00000222 35BC                   ADD         R11,R5
    00000224 04CE                   MOV.L       @(R0,R12),R4
    00000226 430B                   JSR         @R3
    00000228 34AC                   ADD         R10,R4
        REBORN.c   185                ++i;
    0000022A 62E0                   MOV.B       @R14,R2
    0000022C 7201                   ADD         #1,R2
        REBORN.c   186                //            Sleep(30); //observer la generation
        REBORN.c   187                ML_display_vram();
    0000022E 4D0B                   JSR         @R13
    00000230 2E20                   MOV.B       R2,@R14
    00000232              L489:                             
    00000232 63E0                   MOV.B       @R14,R3
    00000234 6282                   MOV.L       @R8,R2
    00000236 3327                   CMP/GT      R2,R3
    00000238 8BE9                   BF          L490
        REBORN.c   188            }
        REBORN.c   189            i = 0;
    0000023A E100                   MOV         #0,R1
    0000023C D818                   MOV.L       L508+32,R8 ; _systemDensity
        REBORN.c   190            while(i <= systemDensity){
    0000023E A012                   BRA         L491
    00000240 2E10                   MOV.B       R1,@R14
    00000242              L492:                             
        REBORN.c   191                ML_circle(x+sunStorageX[i], y+sunStorageY[i], z+sunStorageZ[i], 1);
    00000242 E701                   MOV         #1,R7
    00000244 6CE0                   MOV.B       @R14,R12
    00000246 4C08                   SHLL2       R12
    00000248 D016                   MOV.L       L508+36,R0 ; _sunStorageZ
    0000024A 06CE                   MOV.L       @(R0,R12),R6
    0000024C D016                   MOV.L       L508+40,R0 ; _sunStorageY
    0000024E 369C                   ADD         R9,R6
    00000250 D317                   MOV.L       L508+48,R3 ; _ML_circle
    00000252 05CE                   MOV.L       @(R0,R12),R5
    00000254 D015                   MOV.L       L508+44,R0 ; _sunStorageX




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000256 35BC                   ADD         R11,R5
    00000258 04CE                   MOV.L       @(R0,R12),R4
    0000025A 430B                   JSR         @R3
    0000025C 34AC                   ADD         R10,R4
        REBORN.c   192                ++i;
    0000025E 62E0                   MOV.B       @R14,R2
    00000260 7201                   ADD         #1,R2
        REBORN.c   193                //            Sleep(30); //observer la generation
        REBORN.c   194                ML_display_vram();
    00000262 4D0B                   JSR         @R13
    00000264 2E20                   MOV.B       R2,@R14
    00000266              L491:                             
    00000266 63E0                   MOV.B       @R14,R3
    00000268 6282                   MOV.L       @R8,R2
    0000026A 3327                   CMP/GT      R2,R3
    0000026C 8BE9                   BF          L492
    0000026E              L488:                             
        REBORN.c   195            }
        REBORN.c   196        }
        REBORN.c   197    }
    0000026E 4F26                   LDS.L       @R15+,PR
    00000270 68F6                   MOV.L       @R15+,R8
    00000272 69F6                   MOV.L       @R15+,R9
    00000274 6AF6                   MOV.L       @R15+,R10
    00000276 6BF6                   MOV.L       @R15+,R11
    00000278 6CF6                   MOV.L       @R15+,R12
    0000027A 6DF6                   MOV.L       @R15+,R13
    0000027C 000B                   RTS
    0000027E 6EF6                   MOV.L       @R15+,R14
    00000280              L508:                             
    00000280 <00000000>             .DATA.L     _i
    00000284 <00000000>             .DATA.L     _ML_clear_vram
    00000288 <00000000>             .DATA.L     _planetCount
    0000028C <00000000>             .DATA.L     _ML_display_vram
    00000290 <00000000>             .DATA.L     _astralStorageZ1
    00000294 <00000000>             .DATA.L     _astralStorageY1
    00000298 <00000000>             .DATA.L     _astralStorageX1
    0000029C <00000000>             .DATA.L     _ML_filled_circle
    000002A0 <00000000>             .DATA.L     _systemDensity
    000002A4 <00000000>             .DATA.L     _sunStorageZ
    000002A8 <00000000>             .DATA.L     _sunStorageY
    000002AC <00000000>             .DATA.L     _sunStorageX
    000002B0 <00000000>             .DATA.L     _ML_circle
        REBORN.c   198    void generateOutputs(){// genere 3 constantes en fonc de X Y Z et des seed X0 Y0 Z0
    000002B4              _generateOutputs:                ; function: generateOutputs
                                                           ; frame size=16
                                                           ; used runtime library name:
                                                           ; __modls
    000002B4 2FE6                   MOV.L       R14,@-R15
    000002B6 2FD6                   MOV.L       R13,@-R15
    000002B8 2FC6                   MOV.L       R12,@-R15
    000002BA 4F22                   STS.L       PR,@-R15
        REBORN.c   199        //int local, local1;
        REBORN.c   200        //local = X0-(X/128);
        REBORN.c   201        //while (local>1000){
        REBORN.c   202        //    local /= 10;
        REBORN.c   203        //}




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        REBORN.c   204        srand(X);
    000002BC DE49                   MOV.L       L509+4,R14 ; _srand
    000002BE D34A                   MOV.L       L509+8,R3  ; _X
    000002C0 4E0B                   JSR         @R14
    000002C2 6432                   MOV.L       @R3,R4
        REBORN.c   205        output1 = rand() % 999;
    000002C4 9C8C                   MOV.W       L509,R12   ; H'03E7
    000002C6 DD49                   MOV.L       L509+12,R13; _rand
    000002C8 4D0B                   JSR         @R13
    000002CA 0009                   NOP
    000002CC D248                   MOV.L       L509+16,R2 ; __modls
    000002CE 6103                   MOV         R0,R1
    000002D0 420B                   JSR         @R2
    000002D2 60C3                   MOV         R12,R0
    000002D4 D347                   MOV.L       L509+20,R3 ; _output1
    000002D6 2302                   MOV.L       R0,@R3
        REBORN.c   206        //output1 = local;
        REBORN.c   207        //local = Y0-(Y/128);
        REBORN.c   208        //while (local>1000){
        REBORN.c   209        //    local /= 10;
        REBORN.c   210        //}
        REBORN.c   211        srand(Y);
    000002D8 D247                   MOV.L       L509+24,R2 ; _Y
    000002DA 4E0B                   JSR         @R14
    000002DC 6422                   MOV.L       @R2,R4
        REBORN.c   212        output2 = rand() % 999;
    000002DE 4D0B                   JSR         @R13
    000002E0 0009                   NOP
    000002E2 6103                   MOV         R0,R1
    000002E4 D342                   MOV.L       L509+16,R3 ; __modls
    000002E6 430B                   JSR         @R3
    000002E8 60C3                   MOV         R12,R0
    000002EA D244                   MOV.L       L509+28,R2 ; _output2
        REBORN.c   213        //output2 = local;
        REBORN.c   214        //local = Z0-(Z/128);
        REBORN.c   215        //while (local>1000){
        REBORN.c   216        //    local /= 10;
        REBORN.c   217        //}
        REBORN.c   218        srand(Z);
    000002EC D344                   MOV.L       L509+32,R3 ; _Z
    000002EE 2202                   MOV.L       R0,@R2
    000002F0 4E0B                   JSR         @R14
    000002F2 6432                   MOV.L       @R3,R4
        REBORN.c   219        output3 = rand() % 999;
    000002F4 4D0B                   JSR         @R13
    000002F6 0009                   NOP
    000002F8 D23D                   MOV.L       L509+16,R2 ; __modls
    000002FA 6103                   MOV         R0,R1
    000002FC 420B                   JSR         @R2
    000002FE 60C3                   MOV         R12,R0
    00000300 D340                   MOV.L       L509+36,R3 ; _output3
    00000302 2302                   MOV.L       R0,@R3
        REBORN.c   220        //output3 = local;
        REBORN.c   221        //output1=output1*X;
        REBORN.c   222        //output2=output2*Y;
        REBORN.c   223        //output3=output3*Z;
        REBORN.c   224        //do{                               // les outputs sont redimenssiones a un maximum de 999 




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        REBORN.c   225        //    local1 = output1%10;
        REBORN.c   226        //    output1 = (output1-local1)/10;
        REBORN.c   227        //} while (output1>1000);
        REBORN.c   228        //do{
        REBORN.c   229        //    local1 = output2%10;
        REBORN.c   230        //    output2 = (output2-local1)/10;
        REBORN.c   231        //} while (output2>1000);
        REBORN.c   232        //do
        REBORN.c   233        //{
        REBORN.c   234        //    local1 = output3%10;
        REBORN.c   235        //    output3 = (output3-local1)/10;
        REBORN.c   236        //} while (output3>1000);
        REBORN.c   237    
        REBORN.c   238        useOutputs();
    00000304 4F26                   LDS.L       @R15+,PR
    00000306 6CF6                   MOV.L       @R15+,R12
    00000308 6DF6                   MOV.L       @R15+,R13
    0000030A 6EF6                   MOV.L       @R15+,R14
        REBORN.c   239    }
        REBORN.c   240    void useOutputs(){// rempli les listes d'infos des planetes grace aux outputs (a refaire si systemes solai
                         +res)
    0000030C              _useOutputs:                     ; function: useOutputs
                                                           ; frame size=36
                                                           ; used runtime library name:
                                                           ; __modls
    0000030C 2FE6                   MOV.L       R14,@-R15
    0000030E 2FD6                   MOV.L       R13,@-R15
    00000310 2FC6                   MOV.L       R12,@-R15
    00000312 2FB6                   MOV.L       R11,@-R15
    00000314 2FA6                   MOV.L       R10,@-R15
    00000316 2F96                   MOV.L       R9,@-R15
    00000318 2F86                   MOV.L       R8,@-R15
    0000031A 4F22                   STS.L       PR,@-R15
    0000031C 4F12                   STS.L       MACL,@-R15
        REBORN.c   241        srand(output1);
    0000031E D931                   MOV.L       L509+4,R9  ; _srand
    00000320 D334                   MOV.L       L509+20,R3 ; _output1
    00000322 490B                   JSR         @R9
    00000324 6432                   MOV.L       @R3,R4
        REBORN.c   242        systemDensity = rand() % 9;
    00000326 DA31                   MOV.L       L509+12,R10; _rand
    00000328 4A0B                   JSR         @R10
    0000032A 0009                   NOP
    0000032C D230                   MOV.L       L509+16,R2 ; __modls
    0000032E 6103                   MOV         R0,R1
    00000330 420B                   JSR         @R2
    00000332 E009                   MOV         #9,R0
    00000334 D334                   MOV.L       L509+40,R3 ; _systemDensity
        REBORN.c   243        planetX, planetY, planetZ;
        REBORN.c   244        planetCount=0;
    00000336 E200                   MOV         #0,R2
    00000338 D134                   MOV.L       L509+44,R1 ; _planetCount
    0000033A 2302                   MOV.L       R0,@R3
    0000033C 2122                   MOV.L       R2,@R1
        REBORN.c   245        for (i = 0; i <= systemDensity; ++i){
    0000033E 6323                   MOV         R2,R3
    00000340 D833                   MOV.L       L509+48,R8 ; _sunY




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000342 DB34                   MOV.L       L509+52,R11; _i
    00000344 DC34                   MOV.L       L509+56,R12; _planetX
    00000346 DD35                   MOV.L       L509+60,R13; _planetY
    00000348 DE35                   MOV.L       L509+64,R14; _o
    0000034A A0F5                   BRA         L493
    0000034C 2B30                   MOV.B       R3,@R11
    0000034E              L494:                             
        REBORN.c   246            //create suns
        REBORN.c   247    
        REBORN.c   248            output1= output1*i;
    0000034E 61B0                   MOV.B       @R11,R1
    00000350 D228                   MOV.L       L509+20,R2 ; _output1
    00000352 6322                   MOV.L       @R2,R3
    00000354 0137                   MUL.L       R3,R1
    00000356 6023                   MOV         R2,R0
    00000358 011A                   STS         MACL,R1
    0000035A 2012                   MOV.L       R1,@R0
        REBORN.c   249            srand(output1+i);
    0000035C 64B0                   MOV.B       @R11,R4
    0000035E 490B                   JSR         @R9
    00000360 341C                   ADD         R1,R4
        REBORN.c   250            sunX = (rand() % 120)+8;//X
    00000362 4A0B                   JSR         @R10
    00000364 0009                   NOP
    00000366 6103                   MOV         R0,R1
    00000368 D321                   MOV.L       L509+16,R3 ; __modls
    0000036A 430B                   JSR         @R3
    0000036C E078                   MOV         #120,R0
    0000036E 7008                   ADD         #8,R0
    00000370 D22C                   MOV.L       L509+68,R2 ; _sunX
    00000372 2202                   MOV.L       R0,@R2
        REBORN.c   251            srand(output2+i);
    00000374 64B0                   MOV.B       @R11,R4
    00000376 D121                   MOV.L       L509+28,R1 ; _output2
    00000378 6312                   MOV.L       @R1,R3
    0000037A 490B                   JSR         @R9
    0000037C 343C                   ADD         R3,R4
        REBORN.c   252            sunY = (rand() % 120)+8;//Y
    0000037E 4A0B                   JSR         @R10
    00000380 0009                   NOP
    00000382 6103                   MOV         R0,R1
    00000384 D31A                   MOV.L       L509+16,R3 ; __modls
    00000386 430B                   JSR         @R3
    00000388 E078                   MOV         #120,R0
    0000038A 7008                   ADD         #8,R0
        REBORN.c   253            srand(output3+i);
    0000038C D21D                   MOV.L       L509+36,R2 ; _output3
    0000038E 2802                   MOV.L       R0,@R8
    00000390 64B0                   MOV.B       @R11,R4
    00000392 6322                   MOV.L       @R2,R3
    00000394 490B                   JSR         @R9
    00000396 343C                   ADD         R3,R4
        REBORN.c   254            sunZ = (rand() % 6)+3;//Z
    00000398 4A0B                   JSR         @R10
    0000039A 0009                   NOP
    0000039C D314                   MOV.L       L509+16,R3 ; __modls
    0000039E 6103                   MOV         R0,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003A0 430B                   JSR         @R3
    000003A2 E006                   MOV         #6,R0
    000003A4 D220                   MOV.L       L509+72,R2 ; _sunZ
    000003A6 7003                   ADD         #3,R0
    000003A8 2202                   MOV.L       R0,@R2
        REBORN.c   255            sunStorageX[i] = sunX;   //fill storage
    000003AA 63B0                   MOV.B       @R11,R3
    000003AC D01F                   MOV.L       L509+76,R0 ; _sunStorageX
    000003AE 4308                   SHLL2       R3
    000003B0 D21C                   MOV.L       L509+68,R2 ; _sunX
    000003B2 6122                   MOV.L       @R2,R1
        REBORN.c   256            sunStorageY[i] = sunY;
        REBORN.c   257            sunStorageZ[i] = sunZ;
    000003B4 D21C                   MOV.L       L509+72,R2 ; _sunZ
    000003B6 0316                   MOV.L       R1,@(R0,R3)
    000003B8 63B0                   MOV.B       @R11,R3
    000003BA 4308                   SHLL2       R3
    000003BC D01C                   MOV.L       L509+80,R0 ; _sunStorageY
    000003BE 6182                   MOV.L       @R8,R1
    000003C0 0316                   MOV.L       R1,@(R0,R3)
    000003C2 63B0                   MOV.B       @R11,R3
    000003C4 D01B                   MOV.L       L509+84,R0 ; _sunStorageZ
    000003C6 4308                   SHLL2       R3
    000003C8 6122                   MOV.L       @R2,R1
        REBORN.c   258            planetDensity = (rand() % 30)+1;    // create density
    000003CA 4A0B                   JSR         @R10
    000003CC 0316                   MOV.L       R1,@(R0,R3)
    000003CE 6103                   MOV         R0,R1
    000003D0 D307                   MOV.L       L509+16,R3 ; __modls
    000003D2 430B                   JSR         @R3
    000003D4 E01E                   MOV         #30,R0
    000003D6 7001                   ADD         #1,R0
    000003D8 D217                   MOV.L       L509+88,R2 ; _planetDensity
    000003DA 2202                   MOV.L       R0,@R2
        REBORN.c   259            for (o = 0; o < planetDensity; ++o){
    000003DC A0A3                   BRA         L505
    000003DE E300                   MOV         #0,R3
    000003E0              L509:                             
    000003E0 03E7                   .DATA.W     H'03E7
    000003E2 0000                   .DATA.W     0
    000003E4 <00000000>             .DATA.L     _srand
    000003E8 <00000000>             .DATA.L     _X
    000003EC <00000000>             .DATA.L     _rand
    000003F0 <00000000>             .DATA.L     __modls
    000003F4 <00000000>             .DATA.L     _output1
    000003F8 <00000000>             .DATA.L     _Y
    000003FC <00000000>             .DATA.L     _output2
    00000400 <00000000>             .DATA.L     _Z
    00000404 <00000000>             .DATA.L     _output3
    00000408 <00000000>             .DATA.L     _systemDensity
    0000040C <00000000>             .DATA.L     _planetCount
    00000410 <00000000>             .DATA.L     _sunY
    00000414 <00000000>             .DATA.L     _i
    00000418 <00000000>             .DATA.L     _planetX
    0000041C <00000000>             .DATA.L     _planetY
    00000420 <00000000>             .DATA.L     _o
    00000424 <00000000>             .DATA.L     _sunX




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000428 <00000000>             .DATA.L     _sunZ
    0000042C <00000000>             .DATA.L     _sunStorageX
    00000430 <00000000>             .DATA.L     _sunStorageY
    00000434 <00000000>             .DATA.L     _sunStorageZ
    00000438 <00000000>             .DATA.L     _planetDensity
    0000043C              L496:                             
        REBORN.c   260                //create planets around sun
        REBORN.c   261    
        REBORN.c   262                //X
        REBORN.c   263                srand(output1+sunX+o);
    0000043C 64E0                   MOV.B       @R14,R4
    0000043E D247                   MOV.L       L510+2,R2  ; _output1
    00000440 D047                   MOV.L       L510+6,R0  ; _sunX
    00000442 6322                   MOV.L       @R2,R3
    00000444 6102                   MOV.L       @R0,R1
    00000446 343C                   ADD         R3,R4
    00000448 490B                   JSR         @R9
    0000044A 341C                   ADD         R1,R4
        REBORN.c   264                planetX = (rand() % 47) -15;
    0000044C 4A0B                   JSR         @R10
    0000044E 0009                   NOP
    00000450 D344                   MOV.L       L510+10,R3 ; __modls
    00000452 6103                   MOV         R0,R1
    00000454 430B                   JSR         @R3
    00000456 E02F                   MOV         #47,R0
    00000458 70F1                   ADD         #-15,R0
    0000045A 6403                   MOV         R0,R4
    0000045C E209                   MOV         #9,R2
    0000045E 3427                   CMP/GT      R2,R4
    00000460 8D05                   BT/S        L497
    00000462 2C02                   MOV.L       R0,@R12
    00000464 61C2                   MOV.L       @R12,R1
    00000466 4111                   CMP/PZ      R1
    00000468 8B01                   BF          L497
        REBORN.c   265                if(planetX <= 9 && planetX >= 0){
        REBORN.c   266                    planetX = planetX+9;
    0000046A 7409                   ADD         #9,R4
    0000046C 2C42                   MOV.L       R4,@R12
    0000046E              L497:                             
    0000046E E2F7                   MOV         #-9,R2
    00000470 64C2                   MOV.L       @R12,R4
    00000472 3423                   CMP/GE      R2,R4
    00000474 8B03                   BF          L498
    00000476 4415                   CMP/PL      R4
    00000478 8901                   BT          L498
        REBORN.c   267                }
        REBORN.c   268                if(planetX >= -9 && planetX <= 0){
        REBORN.c   269                    planetX = planetX-9;
    0000047A 74F7                   ADD         #-9,R4
    0000047C 2C42                   MOV.L       R4,@R12
    0000047E              L498:                             
        REBORN.c   270                }
        REBORN.c   271                planetX = sunX+planetX;
    0000047E D138                   MOV.L       L510+6,R1  ; _sunX
    00000480 62C2                   MOV.L       @R12,R2
    00000482 6312                   MOV.L       @R1,R3
    00000484 323C                   ADD         R3,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000486 2C22                   MOV.L       R2,@R12
        REBORN.c   272    
        REBORN.c   273                //Y
        REBORN.c   274                srand(output2+sunY+o);
    00000488 64E0                   MOV.B       @R14,R4
    0000048A D237                   MOV.L       L510+14,R2 ; _output2
    0000048C 6182                   MOV.L       @R8,R1
    0000048E 6322                   MOV.L       @R2,R3
    00000490 343C                   ADD         R3,R4
    00000492 490B                   JSR         @R9
    00000494 341C                   ADD         R1,R4
        REBORN.c   275                planetY = (rand() % 47) -15;
    00000496 4A0B                   JSR         @R10
    00000498 0009                   NOP
    0000049A 6103                   MOV         R0,R1
    0000049C D331                   MOV.L       L510+10,R3 ; __modls
    0000049E 430B                   JSR         @R3
    000004A0 E02F                   MOV         #47,R0
    000004A2 70F1                   ADD         #-15,R0
    000004A4 6403                   MOV         R0,R4
    000004A6 E209                   MOV         #9,R2
    000004A8 3427                   CMP/GT      R2,R4
    000004AA 8D05                   BT/S        L499
    000004AC 2D02                   MOV.L       R0,@R13
    000004AE 61D2                   MOV.L       @R13,R1
    000004B0 4111                   CMP/PZ      R1
    000004B2 8B01                   BF          L499
        REBORN.c   276                if(planetY <= 9 && planetY >= 0){
        REBORN.c   277                    planetY = planetY+9;
    000004B4 7409                   ADD         #9,R4
    000004B6 2D42                   MOV.L       R4,@R13
    000004B8              L499:                             
    000004B8 64D2                   MOV.L       @R13,R4
    000004BA E2F7                   MOV         #-9,R2
    000004BC 3423                   CMP/GE      R2,R4
    000004BE 8B03                   BF          L500
    000004C0 4415                   CMP/PL      R4
    000004C2 8901                   BT          L500
        REBORN.c   278                }
        REBORN.c   279                if(planetY >= -9 && planetY <= 0){
        REBORN.c   280                    planetY = planetY-9;
    000004C4 74F7                   ADD         #-9,R4
    000004C6 2D42                   MOV.L       R4,@R13
    000004C8              L500:                             
        REBORN.c   281                }
        REBORN.c   282                planetY = sunY+planetY;
    000004C8 6382                   MOV.L       @R8,R3
    000004CA 62D2                   MOV.L       @R13,R2
        REBORN.c   283                //while(sqrt(pow(planetX-sunX,2)+pow(planetY-sunY,2))>20){
        REBORN.c   284                //    --planetX;
        REBORN.c   285                //    --planetY;
        REBORN.c   286                //}
        REBORN.c   287    
        REBORN.c   288                //Z
        REBORN.c   289                srand(output3+sunZ+o);
    000004CC D028                   MOV.L       L510+22,R0 ; _sunZ
    000004CE 323C                   ADD         R3,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004D0 2D22                   MOV.L       R2,@R13
    000004D2 64E0                   MOV.B       @R14,R4
    000004D4 D225                   MOV.L       L510+18,R2 ; _output3
    000004D6 6322                   MOV.L       @R2,R3
    000004D8 6102                   MOV.L       @R0,R1
    000004DA 343C                   ADD         R3,R4
    000004DC 490B                   JSR         @R9
    000004DE 341C                   ADD         R1,R4
        REBORN.c   290                planetZ = (rand() % 2)+2;
    000004E0 4A0B                   JSR         @R10
    000004E2 0009                   NOP
    000004E4 4011                   CMP/PZ      R0
    000004E6 8B01                   BF          L501
    000004E8 A005                   BRA         L502
    000004EA C901                   AND         #1,R0
    000004EC              L501:                             
    000004EC 6007                   NOT         R0,R0
    000004EE 7001                   ADD         #1,R0
    000004F0 C901                   AND         #1,R0
    000004F2 6007                   NOT         R0,R0
    000004F4 7001                   ADD         #1,R0
    000004F6              L502:                             
    000004F6 7002                   ADD         #2,R0
    000004F8 D21E                   MOV.L       L510+26,R2 ; _planetZ
    000004FA 2202                   MOV.L       R0,@R2
        REBORN.c   291                astralStorageX1[o] = planetX;   //fill storage
    000004FC 63E0                   MOV.B       @R14,R3
    000004FE 4308                   SHLL2       R3
    00000500 D01D                   MOV.L       L510+30,R0 ; _astralStorageX1
    00000502 61C2                   MOV.L       @R12,R1
    00000504 0316                   MOV.L       R1,@(R0,R3)
        REBORN.c   292                astralStorageY1[o] = planetY;
    00000506 63E0                   MOV.B       @R14,R3
    00000508 D01C                   MOV.L       L510+34,R0 ; _astralStorageY1
    0000050A 4308                   SHLL2       R3
    0000050C 61D2                   MOV.L       @R13,R1
    0000050E 0316                   MOV.L       R1,@(R0,R3)
        REBORN.c   293                astralStorageZ1[o] = planetZ;
    00000510 63E0                   MOV.B       @R14,R3
    00000512 4308                   SHLL2       R3
    00000514 D01A                   MOV.L       L510+38,R0 ; _astralStorageZ1
    00000516 6122                   MOV.L       @R2,R1
    00000518 0316                   MOV.L       R1,@(R0,R3)
        REBORN.c   294                ++planetCount;
    0000051A D31A                   MOV.L       L510+42,R3 ; _planetCount
    0000051C 6132                   MOV.L       @R3,R1
    0000051E 7101                   ADD         #1,R1
    00000520 2312                   MOV.L       R1,@R3
    00000522 63E0                   MOV.B       @R14,R3
    00000524 7301                   ADD         #1,R3
    00000526              L505:                             
    00000526 2E30                   MOV.B       R3,@R14
    00000528 62E0                   MOV.B       @R14,R2
    0000052A D117                   MOV.L       L510+46,R1 ; _planetDensity
    0000052C 6312                   MOV.L       @R1,R3
    0000052E 3233                   CMP/GE      R3,R2
    00000530 8B84                   BF          L496




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000532 60B0                   MOV.B       @R11,R0
    00000534 7001                   ADD         #1,R0
    00000536 2B00                   MOV.B       R0,@R11
    00000538              L493:                             
    00000538 63B0                   MOV.B       @R11,R3
    0000053A D114                   MOV.L       L510+50,R1 ; _systemDensity
    0000053C 6212                   MOV.L       @R1,R2
    0000053E 3327                   CMP/GT      R2,R3
    00000540 8901                   BT          L511
    00000542 AF04                   BRA         L494
    00000544 0009                   NOP
    00000546              L511:                             
        REBORN.c   295                
        REBORN.c   296            }
        REBORN.c   297        }
        REBORN.c   298    }
    00000546 4F16                   LDS.L       @R15+,MACL
    00000548 4F26                   LDS.L       @R15+,PR
    0000054A 68F6                   MOV.L       @R15+,R8
    0000054C 69F6                   MOV.L       @R15+,R9
    0000054E 6AF6                   MOV.L       @R15+,R10
    00000550 6BF6                   MOV.L       @R15+,R11
    00000552 6CF6                   MOV.L       @R15+,R12
    00000554 6DF6                   MOV.L       @R15+,R13
    00000556 000B                   RTS
    00000558 6EF6                   MOV.L       @R15+,R14
    0000055A              L510:                             
    0000055A 0000                   .DATA.W     0
    0000055C <00000000>             .DATA.L     _output1
    00000560 <00000000>             .DATA.L     _sunX
    00000564 <00000000>             .DATA.L     __modls
    00000568 <00000000>             .DATA.L     _output2
    0000056C <00000000>             .DATA.L     _output3
    00000570 <00000000>             .DATA.L     _sunZ
    00000574 <00000000>             .DATA.L     _planetZ
    00000578 <00000000>             .DATA.L     _astralStorageX1
    0000057C <00000000>             .DATA.L     _astralStorageY1
    00000580 <00000000>             .DATA.L     _astralStorageZ1
    00000584 <00000000>             .DATA.L     _planetCount
    00000588 <00000000>             .DATA.L     _planetDensity
    0000058C <00000000>             .DATA.L     _systemDensity
        REBORN.c   299    
        REBORN.c   300    
        REBORN.c   301    
        REBORN.c   302    
        REBORN.c   303    //****************************************************************************
        REBORN.c   304    //**************                                              ****************
        REBORN.c   305    //**************                 Notice!                      ****************
        REBORN.c   306    //**************                                              ****************
        REBORN.c   307    //**************  Please do not change the following source.  ****************
        REBORN.c   308    //**************                                              ****************
        REBORN.c   309    //****************************************************************************
        REBORN.c   310    
        REBORN.c   311    
        REBORN.c   312    #pragma section _BR_Size
        REBORN.c   313    unsigned long BR_Size;
        REBORN.c   314    #pragma section




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

        REBORN.c   315    
        REBORN.c   316    
        REBORN.c   317    #pragma section _TOP
        REBORN.c   318    
        REBORN.c   319    //****************************************************************************
        REBORN.c   320    //  InitializeSystem
        REBORN.c   321    //
        REBORN.c   322    //  param   :   isAppli   : 1 = Application / 0 = eActivity
        REBORN.c   323    //              OptionNum : Option Number (only eActivity)
        REBORN.c   324    //
        REBORN.c   325    //  retval  :   1 = No error / 0 = Error
        REBORN.c   326    //
        REBORN.c   327    //****************************************************************************
        REBORN.c   328    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
        REBORN.c   329    {
        REBORN.c   330        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L512+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L512:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
        REBORN.c   331    }
        REBORN.c   332    
        REBORN.c   333    #pragma section
C   00000000              _X0:                             ; static: X0
    00000000 00181C80               .DATA.L     H'00181C80
    00000004              _Y0:                             ; static: Y0
    00000004 0020B980               .DATA.L     H'0020B980
    00000008              _Z0:                             ; static: Z0
    00000008 0029E300               .DATA.L     H'0029E300
D   00000000              _X:                              ; static: X
    00000000 00181C80               .DATA.L     H'00181C80
    00000004              _Y:                              ; static: Y
    00000004 0020B980               .DATA.L     H'0020B980
    00000008              _Z:                              ; static: Z
    00000008 0029E300               .DATA.L     H'0029E300
    0000000C              _systemDensity:                  ; static: systemDensity
    0000000C 00000000               .DATA.L     H'00000000
    00000010              _planetDensity:                  ; static: planetDensity
    00000010 00000000               .DATA.L     H'00000000
B   00000000              _output1:                        ; static: output1
    00000000 00000004               .RES.L      1
    00000004              _output2:                        ; static: output2
    00000004 00000004               .RES.L      1
    00000008              _output3:                        ; static: output3
    00000008 00000004               .RES.L      1
    0000000C              _sunStorageX:                    ; static: sunStorageX
    0000000C 00000028               .RES.L      10
    00000034              _sunStorageY:                    ; static: sunStorageY
    00000034 00000028               .RES.L      10
    0000005C              _sunStorageZ:                    ; static: sunStorageZ
    0000005C 00000028               .RES.L      10
    00000084              _astralStorageX1:                ; static: astralStorageX1
    00000084 00000168               .RES.L      90




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001EC              _astralStorageY1:                ; static: astralStorageY1
    000001EC 00000168               .RES.L      90
    00000354              _astralStorageZ1:                ; static: astralStorageZ1
    00000354 00000168               .RES.L      90
    000004BC              _i:                              ; static: i
    000004BC 00000001               .RES.B      1
    000004BD              _o:                              ; static: o
    000004BD 00000001               .RES.B      1
    000004BE 00000002               .RES.W      1
    000004C0              _planetX:                        ; static: planetX
    000004C0 00000004               .RES.L      1
    000004C4              _planetY:                        ; static: planetY
    000004C4 00000004               .RES.L      1
    000004C8              _planetZ:                        ; static: planetZ
    000004C8 00000004               .RES.L      1
    000004CC              _sunX:                           ; static: sunX
    000004CC 00000004               .RES.L      1
    000004D0              _sunY:                           ; static: sunY
    000004D0 00000004               .RES.L      1
    000004D4              _sunZ:                           ; static: sunZ
    000004D4 00000004               .RES.L      1
    000004D8              _planetCount:                    ; static: planetCount
    000004D8 00000004               .RES.L      1
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1




































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 06-Jun-2015 16:49:42  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:         0




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      333



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               00000590 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               0000000C Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000014 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               000004DC Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000A9C Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           10
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          34
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            77






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\Az\AppData\Local\Temp\hmkFF65.tmp 

